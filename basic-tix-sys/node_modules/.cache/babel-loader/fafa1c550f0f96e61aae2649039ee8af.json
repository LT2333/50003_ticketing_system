{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Jingqi\\\\Documents\\\\GitHub\\\\50003_ticketing_system\\\\basic-tix-sys\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jingqi\\\\Documents\\\\GitHub\\\\50003_ticketing_system\\\\basic-tix-sys\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jingqi\\\\Documents\\\\GitHub\\\\50003_ticketing_system\\\\basic-tix-sys\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jingqi\\\\Documents\\\\GitHub\\\\50003_ticketing_system\\\\basic-tix-sys\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jingqi\\\\Documents\\\\GitHub\\\\50003_ticketing_system\\\\basic-tix-sys\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jingqi\\\\Documents\\\\GitHub\\\\50003_ticketing_system\\\\basic-tix-sys\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jingqi\\\\Documents\\\\GitHub\\\\50003_ticketing_system\\\\basic-tix-sys\\\\src\\\\Components\\\\chatMessages.js\";\nimport React, { Component } from \"react\";\nimport ChatMessage from \"./chatMessage\";\nimport { Button, Row, Container } from \"shards-react\";\nimport \"./chatMessages.css\";\n\nvar ChatMessages =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatMessages, _Component);\n\n  function ChatMessages(props) {\n    var _this;\n\n    _classCallCheck(this, ChatMessages);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatMessages).call(this, props));\n    _this.state = {\n      messageInfoArray: []\n    };\n    _this.handleRefresh = _this.handleRefresh.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // componentDidUpdate() {\n  //   // There is a new message in the state, scroll to bottom of list\n  //   const objDiv = document.getElementById(\"messageList\");\n  //   objDiv.scrollTop = objDiv.scrollHeight;\n  // }\n\n\n  _createClass(ChatMessages, [{\n    key: \"handleRefresh\",\n    value: function handleRefresh() {\n      var _this2 = this;\n\n      var unirest = require(\"unirest\");\n\n      var req = unirest(\"GET\", \"https://courier50003.herokuapp.com/portal/viewreq\");\n      req.query({\n        token: \"5c946495471b590004e5fd01\" //token: \"5c94643a471b590004e5fd00\"\n\n      });\n      req.headers({\n        \"cache-control\": \"no-cache\"\n      });\n      req.end(function (res) {\n        if (res.error) throw new Error(res.error);\n\n        _this2.setState({\n          messageInfoArray: res.body\n        });\n\n        console.log(res.body); //console.log(this.state.messageInfoArray);\n        //console.log(this.state.messageInfoArray[0].chat[1]);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var messageInfoArray = this.state.messageInfoArray;\n      console.log(messageInfoArray); // var msg0 = messageInfoArray[0];\n      // console.log(messageInfoArray.chat);\n      // var msgList = [];\n      // for (var i = 0; i < 11; i++) {\n      //   var chatList = messageInfoArray[0].chat[i];\n      //   msgList.push(chatList);\n      // }\n      // console.log(msgList);\n      // // Loop through all the messages in the state and create a Message component\n\n      var messages = messageInfoArray.map(function (m) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(Row, {\n          className: \"chatuser\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, m.name), React.createElement(Row, {\n          className: \"msgbody\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, m.message)));\n      });\n      return React.createElement(\"div\", {\n        className: \"messages\",\n        id: \"messageList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleRefresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Refresh\"), messages);\n    }\n  }]);\n\n  return ChatMessages;\n}(Component);\n\nChatMessages.defaultProps = {\n  messages: []\n};\nexport default ChatMessages;","map":{"version":3,"sources":["C:\\Users\\Jingqi\\Documents\\GitHub\\50003_ticketing_system\\basic-tix-sys\\src\\Components\\chatMessages.js"],"names":["React","Component","ChatMessage","Button","Row","Container","ChatMessages","props","state","messageInfoArray","handleRefresh","bind","unirest","require","req","query","token","headers","end","res","error","Error","setState","body","console","log","messages","map","m","name","message","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,SAAtB,QAAuC,cAAvC;AACA,OAAO,oBAAP;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE;AADP,KAAb;AAIA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,uDAArB;AAPiB;AAQlB,G,CAED;AACA;AACA;AACA;AACA;;;;;oCAEgB;AAAA;;AACd,UAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEA,UAAIC,GAAG,GAAGF,OAAO,CACf,KADe,EAEf,mDAFe,CAAjB;AAKAE,MAAAA,GAAG,CAACC,KAAJ,CAAU;AACRC,QAAAA,KAAK,EAAE,0BADC,CAER;;AAFQ,OAAV;AAKAF,MAAAA,GAAG,CAACG,OAAJ,CAAY;AACV,yBAAiB;AADP,OAAZ;AAIAH,MAAAA,GAAG,CAACI,GAAJ,CAAQ,UAAAC,GAAG,EAAI;AACb,YAAIA,GAAG,CAACC,KAAR,EAAe,MAAM,IAAIC,KAAJ,CAAUF,GAAG,CAACC,KAAd,CAAN;;AAEf,QAAA,MAAI,CAACE,QAAL,CAAc;AACZb,UAAAA,gBAAgB,EAAEU,GAAG,CAACI;AADV,SAAd;;AAIAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACI,IAAhB,EAPa,CASb;AACA;AACD,OAXD;AAYD;;;6BAEQ;AACP,UAAId,gBAAgB,GAAG,KAAKD,KAAL,CAAWC,gBAAlC;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,gBAAZ,EAFO,CAGP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,UAAMiB,QAAQ,GAAGjB,gBAAgB,CAACkB,GAAjB,CAAqB,UAAAC,CAAC,EAAI;AACzC,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BA,CAAC,CAACC,IAA7B,CADF,EAEE,oBAAC,GAAD;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BD,CAAC,CAACE,OAA5B,CAFF,CADF,CADF;AAeD,OAhBgB,CAAjB;AAkBA,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,EAAE,EAAC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKpB,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEGgB,QAFH,CADF;AAMD;;;;EAtFwBzB,S;;AAyF3BK,YAAY,CAACyB,YAAb,GAA4B;AAC1BL,EAAAA,QAAQ,EAAE;AADgB,CAA5B;AAIA,eAAepB,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport ChatMessage from \"./chatMessage\";\r\nimport { Button, Row, Container } from \"shards-react\";\r\nimport \"./chatMessages.css\";\r\n\r\nclass ChatMessages extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageInfoArray: []\r\n    };\r\n\r\n    this.handleRefresh = this.handleRefresh.bind(this);\r\n  }\r\n\r\n  // componentDidUpdate() {\r\n  //   // There is a new message in the state, scroll to bottom of list\r\n  //   const objDiv = document.getElementById(\"messageList\");\r\n  //   objDiv.scrollTop = objDiv.scrollHeight;\r\n  // }\r\n\r\n  handleRefresh() {\r\n    var unirest = require(\"unirest\");\r\n\r\n    var req = unirest(\r\n      \"GET\",\r\n      \"https://courier50003.herokuapp.com/portal/viewreq\"\r\n    );\r\n\r\n    req.query({\r\n      token: \"5c946495471b590004e5fd01\"\r\n      //token: \"5c94643a471b590004e5fd00\"\r\n    });\r\n\r\n    req.headers({\r\n      \"cache-control\": \"no-cache\"\r\n    });\r\n\r\n    req.end(res => {\r\n      if (res.error) throw new Error(res.error);\r\n\r\n      this.setState({\r\n        messageInfoArray: res.body\r\n      });\r\n\r\n      console.log(res.body);\r\n\r\n      //console.log(this.state.messageInfoArray);\r\n      //console.log(this.state.messageInfoArray[0].chat[1]);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var messageInfoArray = this.state.messageInfoArray;\r\n    console.log(messageInfoArray);\r\n    // var msg0 = messageInfoArray[0];\r\n    // console.log(messageInfoArray.chat);\r\n\r\n    // var msgList = [];\r\n    // for (var i = 0; i < 11; i++) {\r\n    //   var chatList = messageInfoArray[0].chat[i];\r\n    //   msgList.push(chatList);\r\n    // }\r\n    // console.log(msgList);\r\n\r\n    // // Loop through all the messages in the state and create a Message component\r\n    const messages = messageInfoArray.map(m => {\r\n      return (\r\n        <div>\r\n          <Container>\r\n            <Row className=\"chatuser\">{m.name}</Row>\r\n            <Row className=\"msgbody\">{m.message}</Row>\r\n\r\n            {/* <ChatMessage\r\n            key={m.chat}\r\n            username={m.chat.name}\r\n            message-body={m.chat.message}\r\n            //fromMe={messageInfoArray.fromMe}\r\n          /> */}\r\n          </Container>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"messages\" id=\"messageList\">\r\n        <Button onClick={this.handleRefresh}>Refresh</Button>\r\n        {messages}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nChatMessages.defaultProps = {\r\n  messages: []\r\n};\r\n\r\nexport default ChatMessages;\r\n"]},"metadata":{},"sourceType":"module"}